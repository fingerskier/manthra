{"version":3,"file":"dexie-react-hooks.js","sources":["../src/useObservable.ts","../src/useLiveQuery.ts","../src/usePermissions.ts","../src/useDocument.ts"],"sourcesContent":["import React from 'react';\nexport interface InteropableObservable<T> {\n  subscribe(\n    onNext: (x: T) => any,\n    onError?: (error: any) => any\n  ): (() => any) | { unsubscribe(): any };\n  getValue?(): T; // For BehaviorSubject\n  hasValue?(): boolean; // For liveQuery observable returning false until a value is available\n}\n\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observable: InteropableObservable<T>,\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T>(\n  observableFactory: () => InteropableObservable<T>,\n  deps?: any[]\n): T | undefined;\nexport function useObservable<T, TDefault>(\n  observableFactory: () => InteropableObservable<T>,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useObservable<T, TDefault>(\n  observableFactory:\n    | InteropableObservable<T>\n    | (() => InteropableObservable<T>),\n  arg2?: any,\n  arg3?: any\n) {\n  // Resolve vars from overloading variants of this function:\n  let deps: any[];\n  let defaultResult: TDefault;\n  if (typeof observableFactory === 'function') {\n    deps = arg2 || [];\n    defaultResult = arg3;\n  } else {\n    deps = [];\n    defaultResult = arg2;\n  }\n\n  // Create a ref that keeps the state we need\n  const monitor = React.useRef({\n    hasResult: false,\n    result: defaultResult as T | TDefault,\n    error: null as any,\n  });\n  // We control when component should rerender. Make triggerUpdate\n  // as examplified on React's docs at:\n  // https://reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate\n  const [_, triggerUpdate] = React.useReducer((x) => x + 1, 0);\n\n  // Memoize the observable based on deps\n  const observable = React.useMemo(() => {\n    // Make it remember previous subscription's default value when\n    // resubscribing.\n    const observable =\n      typeof observableFactory === 'function'\n        ? observableFactory()\n        : observableFactory;\n    if (!observable || typeof observable.subscribe !== 'function') {\n      if (observableFactory === observable) {\n        throw new TypeError(\n          `Given argument to useObservable() was neither a valid observable nor a function.`\n        );\n      } else {\n        throw new TypeError(\n          `Observable factory given to useObservable() did not return a valid observable.`\n        );\n      }\n    }\n\n    if (!monitor.current.hasResult &&\n        typeof window !== 'undefined' // Don't do this in SSR\n       ) {\n      // Optimize for BehaviorSubject and other observables implementing getValue():\n      if (typeof observable.hasValue !== 'function' || observable.hasValue()) {\n        if (typeof observable.getValue === 'function') {\n          monitor.current.result = observable.getValue();\n          monitor.current.hasResult = true;\n        } else {\n          // Find out if the observable has a current value: try get it by subscribing and\n          // unsubscribing synchronously\n          const subscription = observable.subscribe((val) => {\n            monitor.current.result = val;\n            monitor.current.hasResult = true;\n          });\n          // Unsubscribe directly. We only needed any synchronous value if it was possible.\n          if (typeof subscription === 'function') {\n            subscription();\n          } else {\n            subscription.unsubscribe();\n          }\n        }\n      }\n    }\n    return observable;\n  }, deps);\n\n  // Integrate with react devtools:\n  React.useDebugValue(monitor.current.result);\n\n  // Subscribe to the observable\n  React.useEffect(() => {\n    const subscription = observable.subscribe(\n      (val) => {\n        const { current } = monitor;\n        if (current.error !== null || current.result !== val) {\n          current.error = null;\n          current.result = val;\n          current.hasResult = true;\n          triggerUpdate();\n        }\n      },\n      (err) => {\n        const { current } = monitor;\n        if (current.error !== err) {\n          current.error = err;\n          triggerUpdate();\n        }\n      }\n    );\n    return typeof subscription === 'function'\n      ? subscription // Support observables that return unsubscribe directly\n      : subscription.unsubscribe.bind(subscription);\n  }, deps);\n\n  // Throw if observable has emitted error so that\n  // an ErrorBoundrary can catch it\n  if (monitor.current.error) throw monitor.current.error;\n\n  // Return the current result\n  return monitor.current.result;\n}\n","import { Dexie } from 'dexie';\nimport { useObservable } from './useObservable';\n\nexport function useLiveQuery<T>(\n  querier: () => Promise<T> | T,\n  deps?: any[]\n): T | undefined;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps: any[],\n  defaultResult: TDefault\n): T | TDefault;\nexport function useLiveQuery<T, TDefault>(\n  querier: () => Promise<T> | T,\n  deps?: any[],\n  defaultResult?: TDefault\n): T | TDefault {\n  return useObservable(\n    () => Dexie.liveQuery(querier),\n    deps || [],\n    defaultResult as TDefault\n  );\n}\n","import { Dexie } from 'dexie';\nimport { useObservable } from './useObservable';\n//import type { KeyPaths, TableProp } from 'dexie'; // Issue #1725 - not compatible with dexie@3.\n// Workaround: provide these types inline for now. When dexie 4 stable is out, we can use the types from dexie@4.\nexport type KeyPaths<T> = {\n  [P in keyof T]: \n    P extends string \n      ? T[P] extends Array<infer K>\n        ? K extends object // only drill into the array element if it's an object\n          ? P | `${P}.${number}` | `${P}.${number}.${KeyPaths<K>}` \n          : P | `${P}.${number}`\n        : T[P] extends (...args: any[]) => any // Method\n           ? never \n          : T[P] extends object \n            ? P | `${P}.${KeyPaths<T[P]>}` \n            : P \n      : never;\n}[keyof T];\nexport type TableProp<DX extends Dexie> = {\n  [K in keyof DX]: DX[K] extends {schema: any, get: any, put: any, add: any, where: any} ? K : never;\n}[keyof DX] & string;\n\n\ninterface DexieCloudEntity {\n  table(): string;\n  realmId: string;\n  owner: string;\n}\n\nexport interface PermissionChecker<T, TableName extends string> {\n  add(...tableNames: TableName[]): boolean;\n  update(...props: KeyPaths<T>[]): boolean;\n  delete(): boolean;\n}\n\nexport function usePermissions<T extends DexieCloudEntity>(\n  entity: T\n): PermissionChecker<\n  T,\n  T extends { table: () => infer TableName } ? TableName : string\n>;\nexport function usePermissions<\n  TDB extends Dexie,\n  T\n>(db: TDB, table: TableProp<TDB>, obj: T): PermissionChecker<T, TableProp<TDB>>;\nexport function usePermissions(\n  firstArg:\n    | Dexie\n    | {\n        realmId?: string;\n        owner?: string;\n        table?: () => string;\n        readonly db?: Dexie;\n      },\n  table?: string,\n  obj?: { realmId?: string; owner?: string }\n) {\n  if (!firstArg)\n    throw new TypeError(\n      `Invalid arguments to usePermissions(): undefined or null`\n    );\n  let db: Dexie;\n  if (arguments.length >= 3) {\n    if (!('transaction' in firstArg)) {\n      // Using ducktyping instead of instanceof in case there are multiple Dexie modules in app.\n      // First arg is  ensures first arg is a Dexie instance\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 1st arg must be a Dexie instance`\n      );\n    }\n    if (typeof table !== 'string')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 2nd arg must be string`\n      );\n    if (!obj || typeof obj !== 'object')\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): 3rd arg must be an object`\n      );\n    db = firstArg;\n  } else {\n    if (firstArg instanceof Dexie)\n      throw new TypeError(\n        `Invalid arguments to usePermission(db, table, obj): Missing table and obj arguments.`\n      );\n\n    if (\n      typeof firstArg.table === 'function' &&\n      typeof firstArg.db === 'object'\n    ) {\n      db = firstArg.db!;\n      obj = firstArg;\n      table = firstArg.table();\n    } else {\n      throw new TypeError(\n        `Invalid arguments to usePermissions(). ` +\n          `Expected usePermissions(entity: DexieCloudEntity) or ` +\n          `usePermissions(db: Dexie, table: string, obj: DexieCloudObject)`\n      );\n    }\n  }\n  if (!('cloud' in db))\n    throw new Error(\n      `usePermissions() is only for Dexie Cloud but there's no dexie-cloud-addon active in given db.`\n    );\n  if (!('permissions' in (db as any).cloud))\n    throw new Error(`usePermissions() requires a newer version of dexie-cloud-addon. Please upgrade it.`)\n  return useObservable(\n    // @ts-ignore\n    () => db.cloud.permissions(obj, table),\n    [obj.realmId, obj.owner, table]\n  );\n}\n","import { Dexie } from 'dexie';\nimport React from 'react';\n\n// Using import('y-dexie') and import('yjs') to not break the build if y-dexie or yjs are not installed.\n// (these two libries are truly optional and not listed in neither peerDependencies nor optionalDependencies)\n// We want the compiler to not complain about missing imports, so we use type imports.\n// Runtime, we will detect if y-dexie is available and use it via Dexie['DexieYProvider'].\n\ntype DexieYProvider = import('y-dexie').DexieYProvider;\ntype DexieYProviderConstructor = typeof import('y-dexie').DexieYProvider;\ntype YDoc = import('yjs').Doc;\n\nconst gracePeriod = 100 // 100 ms = grace period to optimize for unload/reload scenarios\n\nconst fr = typeof FinalizationRegistry !== 'undefined' && new FinalizationRegistry((doc: YDoc) => {\n  // If coming here, react effect never ran. This is a fallback cleanup mechanism.\n  const DexieYProvider = Dexie['DexieYProvider'] as DexieYProviderConstructor;\n  if (DexieYProvider) DexieYProvider.release(doc);\n});\n\nexport function useDocument(\n  doc: YDoc | null | undefined\n): DexieYProvider | null {\n  if (!fr) throw new TypeError('FinalizationRegistry not supported.');\n  const providerRef = React.useRef<DexieYProvider | null>(null);\n  const DexieYProvider = Dexie['DexieYProvider'] as DexieYProviderConstructor;\n  if (!DexieYProvider) {\n    throw new Error('DexieYProvider is not available. Make sure `y-dexie` is installed and imported.');\n  }\n  let unregisterToken: object | undefined = undefined;\n  if (doc) {\n    if (doc !== providerRef.current?.doc) {\n      providerRef.current = DexieYProvider.load(doc, { gracePeriod });\n      unregisterToken = Object.create(null);\n      fr.register(providerRef, doc, unregisterToken);\n    }\n  } else if (providerRef.current?.doc) {\n    providerRef.current = null;\n  }\n  React.useEffect(() => {\n    if (doc) {\n      // Doc is set or changed. Unregister provider from FinalizationRegistry\n      // and instead take over from here to release the doc when component is unmounted\n      // or when doc is changed. What we're doing here is to avoid relying on FinalizationRegistry\n      // in all the normal cases and instead rely on React's lifecycle to release the doc.\n      // But there can be situations when react never calls this effect and therefore, we\n      // need to rely on FinalizationRegistry to release the doc as a fallback.\n      // We cannot wait with loading the document until the effect happens, because the doc\n      // could have been destroyed in the meantime.\n      if (unregisterToken) fr.unregister(unregisterToken);\n      let provider = DexieYProvider.for(doc);\n      if (provider) {\n        return () => {\n          DexieYProvider.release(doc);\n        }\n      } else {\n        // Maybe the doc was destroyed in the meantime.\n        // Can not happen if React and FinalizationRegistry works as we expect them to.\n        // Except if a user had called DexieYProvider.release() on the doc\n        throw new Error(`FATAL. DexieYProvider.release() has been called somewhere in application code, making us lose the document.`);\n      }\n    }\n  }, [doc, unregisterToken]);\n  return providerRef.current;\n}\n"],"names":["React","Dexie"],"mappings":"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"}